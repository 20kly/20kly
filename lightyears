#!/usr/bin/python

# Set the location of the LightYears files here:
LIGHTYEARS_DIR = "."
# LIGHTYEARS_DIR = "/usr/share/games/lightyears" # (for Debian)

# Save games and configuration files are stored in the user's
# home directory.

import sys, os

def Check_Version() -> None:
    fault = False
    if ( sys.__dict__.get("version_info", None) ):
        (major, minor, micro, releaselevel, serial) = sys.version_info
        if (( major < 3 )
        or (( major == 3 ) and ( minor < 8 ))):
            fault = True
    else:
        major = 1
        minor = 0
        fault = True

    if ( fault ):
        sys.stderr.write("\n")
        sys.stderr.write("Python 3 version 3.8 or higher is required.\n")
        sys.stderr.write("You appear to be using version " + repr((major, minor)) + "\n")
        sys.exit(1)

    try:
        import pygame
    except:
        sys.stderr.write("\n")
        sys.stderr.write("Pygame does not appear to be installed.\n")
        sys.stderr.write("Please install the latest version from http://www.pygame.org/\n")
        sys.exit(1)

    try:
        # The size of this field changed between
        # ver. 1.6 and ver. 1.7. Arrgh.
        [major, minor] = list(pygame.version.vernum)[ 0:2 ]
        x = pygame.version.ver
    except:
        sys.stderr.write("\n")
        sys.stderr.write("Pygame is installed, but you have an old version.\n")
        sys.stderr.write("Please install the latest version from http://www.pygame.org/\n")
        sys.exit(1)

    if ( major < 2 ):
        sys.stderr.write("\n")
        sys.stderr.write(repr(pygame.version.ver))
        sys.stderr.write("Pygame version 2.x or higher is required.\n")
        sys.stderr.write("Please install the latest version from http://www.pygame.org/\n")
        sys.exit(1)



if __name__ == "__main__":
    # Path to data/code dir can be overridden by environment variable
    LIGHTYEARS_DIR = os.environ.get("LIGHTYEARS_DIR", LIGHTYEARS_DIR)

    # Path does not exist? Try current directory.
    if ((LIGHTYEARS_DIR == None)
    or (not os.path.isdir(LIGHTYEARS_DIR))
    or (not os.path.isfile(os.path.join(LIGHTYEARS_DIR, 
                            'code', 'startup.py')))):
        LIGHTYEARS_DIR = "."

    # Paths obtained
    if LIGHTYEARS_DIR != ".":
        LIGHTYEARS_DIR = os.path.abspath(LIGHTYEARS_DIR)
        sys.path.insert(0, LIGHTYEARS_DIR)
    else:
        LIGHTYEARS_DIR = os.path.abspath(LIGHTYEARS_DIR)

    data_dir = os.path.join(LIGHTYEARS_DIR, 'data')
    code_dir = os.path.join(LIGHTYEARS_DIR, 'code')

    # Go
    if (os.path.isdir(data_dir)
    and os.path.isdir(code_dir)
    and os.path.isfile(os.path.join(code_dir, "startup.py"))
    and os.path.isfile(os.path.join(code_dir, "main.py"))
    and os.path.isfile(os.path.join(data_dir, "bolt.png"))
    and os.path.isfile(os.path.join(data_dir, "well.png"))):
        from code import Main, Events
        Check_Version()
        Main(data_dir=data_dir, args=sys.argv[1:],
             event=Events())
    else:
        sys.stderr.write("Unable to find LightYears code & data in:")
        for p in sys.path:
            sys.stderr.write('  ')
            sys.stderr.write(p)

        sys.stderr.write("\n")
        sys.exit(1)

    

